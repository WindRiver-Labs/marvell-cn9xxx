From 15b2738020ab91d4d1e478b9c99f96e6d996f676 Mon Sep 17 00:00:00 2001
From: Stephen Hemminger <stephen@networkplumber.org>
Date: Wed, 26 Jun 2019 16:07:42 -0700
Subject: [PATCH 029/154] mempool/octeontx2: fix build with icc

The Intel compiler is pickier about casts and generates:
otx2_mempool_ops.c(344):
     error #191: type qualifier is meaningless on cast type
  	int64_t * const addr = (int64_t * const)
  	                        ^
This is because of the nature of const.
In this example, the expression is being cast into a pointer
that can not be modified. This is meaningless because the
expression is already a lvalue.

See https://en.wikipedia.org/wiki/Const_(computer_programming)

Fixes: d7a0da3c0043 ("mempool/octeontx2: add fast path mempool ops")

Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
Reviewed-by: Ferruh Yigit <ferruh.yigit@intel.com>
---
 drivers/mempool/octeontx2/otx2_mempool_ops.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/mempool/octeontx2/otx2_mempool_ops.c b/drivers/mempool/octeontx2/otx2_mempool_ops.c
index 25170015a397..97146d1fe4e3 100644
--- a/drivers/mempool/octeontx2/otx2_mempool_ops.c
+++ b/drivers/mempool/octeontx2/otx2_mempool_ops.c
@@ -341,7 +341,7 @@ otx2_npa_deq(struct rte_mempool *mp, void **obj_table, unsigned int n)
 	unsigned int index;
 	uint64_t obj;
 
-	int64_t * const addr = (int64_t * const)
+	int64_t * const addr = (int64_t *)
 			(npa_lf_aura_handle_to_base(mp->pool_id) +
 				NPA_LF_AURA_OP_ALLOCX(0));
 	for (index = 0; index < n; index++, obj_table++) {
-- 
2.14.4

